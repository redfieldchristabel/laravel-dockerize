services:
    app:
        image: myproject/app
        build:
            args:
                appVersion: dev
            context: ./
            dockerfile: Dockerfile
            target: dev
        hostname: myproject.app
        restart: unless-stopped
        depends_on:
            - mysql
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./docker/php/file.ini:/usr/local/etc/php/conf.d/file.ini
            # bind storage public to public
            # - ./storage/app/public:/var/www/public
            # - laravel:/var/www

    queue:
        image: myproject/cli
        build:
            args:
                appVersion: dev
            context: ./
            dockerfile: Dockerfile.cli
            target: dev
        restart: unless-stopped
        depends_on:
            - app
            - mysql
        working_dir: /var/www/
        command: ["php", "artisan", "queue:listen", "--queue=high,default",]
        volumes:
            - ./:/var/www
            - ./docker/php/file.ini:/usr/local/etc/php/conf.d/file.ini
            # bind storage public to public
            # - ./storage/app/public:/var/www/public
            # - laravel:/var/www
        # healthcheck:
        #     test: ["CMD", "php", "artisan", "migrate", "--help"]
        #     interval: 10s
        #     retries: 5
        #     timeout: 5s

    # queue2:
    #     image: myproject/app-cli # Changed to reflect the cli variant
    #     restart: unless-stopped
    #     depends_on:
    #         - app
    #         - mysql
    #     working_dir: /var/www/
    #     entrypoint:
    #         ["php", "artisan", "queue:listen", "--queue=high", "--tries=3"]
    #     volumes:
    #         - ./:/var/www
    #         - ./docker/php/file.ini:/usr/local/etc/php/conf.d/file.ini

    mysql:
        image: "mysql/mysql-server:8.0"
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: "admin143"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
        volumes:
            - ./mysql:/var/lib/mysql
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - "-p${DB_PASSWORD}"
            retries: 3
            timeout: 5s

    nginx:
        build:
            context: .
            dockerfile: nginx.Dockerfile
            target: dev
        restart: unless-stopped
        depends_on:
            - app
        ports:
            - "${FORWARD_NGINX_PORT:-80}:80"
            # - 443:443 #https
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf/:/etc/nginx/conf.d/
            - ./docker/nginx/include/:/etc/nginx/include/
            # - ssl_cert:/etc/letsencrypt #ssl cert
        environment:
            - DISABLE_IPV6=true

    redis:
        image: "redis:alpine"
        restart: always
        volumes:
            - "redis:/data"
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    phpmyadmin:
        image: phpmyadmin
        restart: always
        depends_on:
            - mysql
        ports:
            - ${FORWARD_PHPMYADMIN_PORT:-8081}:80
        environment:
            - PMA_HOST=mysql

    node:
        image: node:18
        restart: unless-stopped
        working_dir: /app
        volumes:
            - ./:/app
            - ./node_modules:/app/node_modules
        command: ["sleep", "infinity"]

    vite:
        image: myproject/vite 
        build:
            context: .
            dockerfile: Dockerfile.vite
        container_name: vite-v2
        restart: unless-stopped
        ports:
            - 5173:5173
        volumes:
            - ./:/app
            - ./node_modules:/app/node_modules
        command: ["npm", "run", "dev"]

    mailpit:
        image: axllent/mailpit
        container_name: mailpit
        restart: unless-stopped
        ports:
            - 8025:8025
            - 1025:1025
        environment:
            MP_MAX_MESSAGES: 5000
            MP_SMTP_AUTH_ACCEPT_ANY: 1
            MP_SMTP_AUTH_ALLOW_INSECURE: 1

    soketi:
        image: quay.io/soketi/soketi:latest
        restart: unless-stopped
        ports:
            - 9601:9601
            - 6001:6001
        environment:
            - SOKETI_DEBUG=true
            - SOKETI_METRICS_SERVER_PORT=9601
            - SOKETI_DEFAULT_APP_ID=${PUSHER_APP_ID}
            - SOKETI_DEFAULT_APP_KEY=${PUSHER_APP_KEY}
            - SOKETI_DEFAULT_APP_SECRET=${PUSHER_APP_SECRET}

volumes:
    redis:
        driver: local
    meilisearch:
        driver: local