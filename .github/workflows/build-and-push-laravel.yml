name: Build and Push Laravel Images to GHCR

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  push:
    branches:
      - main
  workflow_dispatch:

env:
  LATEST_PHP_VERSION: "8.4"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        php_version: ["8.1", "8.2", "8.3", "8.4"]
        variant: ["cli", "fpm", "cli-alpine", "fpm-alpine"]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compute latest PHP version and major version
        run: |
          # Hardcoded php_version list; update when matrix changes (e.g., add 8.4)
          echo "MAJOR_VERSION=$(echo ${{ matrix.php_version }} | cut -d'.' -f1)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/redfieldchristabel/laravel
          tags: |
            # Common tags for all variants
            type=raw,value=${{ matrix.php_version }}.0-${{ matrix.variant }}
            type=raw,value=${{ matrix.php_version }}-${{ matrix.variant }}
            type=raw,value=${{ env.MAJOR_VERSION }}-${{ matrix.variant }},enable=${{ matrix.php_version == env.LATEST_PHP_VERSION }}
            type=raw,value=${{ matrix.variant }}
            # CLI-specific tags
            type=raw,value=${{ matrix.php_version }}.0,enable=${{ matrix.variant == 'cli' }}
            type=raw,value=${{ matrix.php_version }},enable=${{ matrix.variant == 'cli' }}
            type=raw,value=${{ env.MAJOR_VERSION }},enable=${{ matrix.variant == 'cli' && matrix.php_version == env.LATEST_PHP_VERSION }}
            type=raw,value=latest,enable=${{ matrix.variant == 'cli' && matrix.php_version == env.LATEST_PHP_VERSION }}
            # CLI Alpine-specific tags
            type=raw,value=${{ matrix.php_version }}.0-alpine,enable=${{ matrix.variant == 'cli-alpine' }}
            type=raw,value=${{ matrix.php_version }}-alpine,enable=${{ matrix.variant == 'cli-alpine' }}
            type=raw,value=${{ env.MAJOR_VERSION }}-alpine,enable=${{ matrix.variant == 'cli-alpine' && matrix.php_version == env.LATEST_PHP_VERSION }}
            type=raw,value=alpine,enable=${{ matrix.variant == 'cli-alpine' }}

      - name: Log generated tags
        run: |
          echo "Generated tags: ${{ steps.meta.outputs.tags }}"
          echo "Tags JSON: ${{ steps.meta.outputs.json }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ contains(fromJson('["cli", "fpm"]'), matrix.variant) && 'debian.Dockerfile' || 'alpine.Dockerfile' }}
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            VARIANT=${{ matrix.variant }}
          target: ${{ contains(fromJson('["fpm", "fpm-alpine"]'), matrix.variant) && 'fpm' || 'cli' }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Log in to GHCR for verification
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify pushed image
        run: |
          docker pull ghcr.io/redfieldchristabel/laravel:${{ matrix.php_version }}-${{ matrix.variant }}
          echo "Successfully pulled ghcr.io/redfieldchristabel/laravel:${{ matrix.php_version }}-${{ matrix.variant }}"

  build-and-push-filament:
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        php_version: ["8.1", "8.2", "8.3", "8.4"]
        variant: ["cli", "fpm", "cli-alpine", "fpm-alpine"]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compute latest PHP version and major version
        run: |
          echo "LATEST_PHP_VERSION=$(echo '8.1\n8.2\n8.3' | sort -V | tail -n1)" >> $GITHUB_ENV
          echo "MAJOR_VERSION=$(echo ${{ matrix.php_version }} | cut -d'.' -f1)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/redfieldchristabel/laravel
          tags: |
            type=raw,value=${{ matrix.php_version }}.0-${{ matrix.variant }}-filament
            type=raw,value=${{ matrix.php_version }}-${{ matrix.variant }}-filament
            type=raw,value=${{ env.MAJOR_VERSION }}-${{ matrix.variant }}-filament,enable=${{ matrix.php_version == env.LATEST_PHP_VERSION }}
            type=raw,value=${{ matrix.variant }}-filament

      - name: Log generated tags
        run: |
          echo "Generated tags: ${{ steps.meta.outputs.tags }}"
          echo "Tags JSON: ${{ steps.meta.outputs.json }}"

      - name: Build and push Filament Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ contains(fromJson('["cli", "fpm"]'), matrix.variant) && 'filament-debian.Dockerfile' || 'filament-alpine.Dockerfile' }}
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            VARIANT=${{ matrix.variant }}
          target: ${{ contains(fromJson('["fpm", "fpm-alpine"]'), matrix.variant) && 'fpm' || 'cli' }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Log in to GHCR for verification
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify pushed Filament image
        run: |
          docker pull ghcr.io/redfieldchristabel/laravel:${{ matrix.php_version }}-${{ matrix.variant }}-filament
          echo "Successfully pulled ghcr.io/redfieldchristabel/laravel:${{ matrix.php_version }}-${{ matrix.variant }}-filament"
