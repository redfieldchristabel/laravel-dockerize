services:
  app:
    image: <your-container-registry>/app:prod
    hostname: rumc.app
    restart: unless-stopped
    depends_on:
      - mysql
    volumes:
      # bind storage public to public
      - vendor:/var/www/vendor
      - storage:/var/www/storage
      - public:/var/www/public/storage
    env_file:
      - .env

  # Change the version to mysql or database you wanna use
  mysql:
    image: "mysql/mysql-server:8.0"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "admin143"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - ./mysql:/var/lib/mysql
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - "-p${DB_PASSWORD}"
      retries: 3
      timeout: 5s

  nginx:
    image: <your-container-registry>/nginx:prod
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - public:/var/www/public/storage:ro
      # - published:/var/www/public/vendor:ro
    environment:
      - DISABLE_IPV6=true

  redis:
    image: "redis:alpine"
    hostname: redis
    restart: always
    volumes:
      - "redis:/data"
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

  # queue:
  #   image: <your-container-registry>/cli:prod
  #   restart: unless-stopped
  #   depends_on:
  #     - redis
  #     - app
  #     - mysql
  #   command:
  #     ["php", "artisan", "queue:work", "--queue=high,default", "--tries=3"]
  #   env_file:
  #     - .env
  #   volumes:
  #     - vendor:/var/www/vendor
  #     - storage:/var/www/storage

  # scheduler:
  #   image: <your-container-registry>/cli:prod
  #   restart: unless-stopped
  #   depends_on:
  #     - redis
  #     - app
  #     - mysql
  #   command: ["php", "artisan", "schedule:work"]
  #   env_file:
  #     - .env
  #   volumes:
  #     - vendor:/var/www/vendor
  #     - storage:/var/www/storage

  soketi:
    image: quay.io/soketi/soketi:latest
    hostname: soketi
    restart: unless-stopped
    environment:
      - SOKETI_DEBUG=true
      - SOKETI_METRICS_SERVER_PORT=9601
      - SOKETI_DEFAULT_APP_ID=${PUSHER_APP_ID}
      - SOKETI_DEFAULT_APP_KEY=${PUSHER_APP_KEY}
      - SOKETI_DEFAULT_APP_SECRET=${PUSHER_APP_SECRET}

volumes:
  vendor:
  storage:
  public:
  published:
  redis:
