server {
    # # open if ssl configured
    # ssl on;
    # # add our paths for the certificates Certbot created
    # ssl_certificate /etc/letsencrypt/live/rumc.dev.cara.com.my/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/rumc.dev.cara.com.my/privkey.pem;

    # # open if ssl configured
    # include /var/www/docker/nginx_include/ssl.conf;

    # # open if ssl configured
    # listen 443 default_server;
    # ssl_protocols TLSv1.3;
    client_max_body_size 120M;

    # remove for ssl
    listen 80 default_server;
    server_name rumc.dev.cara.com.my;

    rewrite_log on;

    # access_log /var/log/nginx/ssl-www.example.com.access.log;
    # error_log /var/log/nginx/ssl-www.example.com.error.log;

    access_log /dev/stderr;
    error_log /dev/stderr;

    root /var/www/public;
    index index.php;

    # remove trailing slash
    location ~ ^(.+)/$ {
        return 301 $1$is_args$args;
    }

    # Carbone Studio
    location /carbone-studio {
        proxy_pass http://carbone:4000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Script-Name /carbone-studio;
        proxy_redirect off;
    }

    # Soketi
    # --- Soketi WebSocket Reverse Proxy ---
    location /app {
        proxy_pass http://soketi:6001;
        proxy_read_timeout 60;
        proxy_connect_timeout 60;
        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Add a location block to serve static files
    location ~* \.(css|js|gif|jpeg|jpg|png|webp|woff2|woff|ico)$ {
        # include include/fpm-handler.conf;
        root /var/www/public;
        add_header X-Serve-Type 'static';
    }

    # PHP FPM
    location / {
        include include/fpm-handler.conf;
    }


}
